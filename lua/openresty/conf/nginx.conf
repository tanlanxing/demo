worker_processes  1;        #nginx worker 数量
error_log logs/error.log;   #指定错误日志文件路径
events {
    worker_connections 1024;
}

http {
    lua_code_cache off;
    lua_shared_dict my_cache 32m;
    lua_package_path '/usr/local/openresty/lualib/?/init.lua;/home/conamn/dev/lua/openresty/lua/vendor/?.lua;;';
    init_worker_by_lua_file lua/app/init.lua;
    server {
        #监听端口，若你的6699端口已经被占用，则需要修改
        listen 6699;

        location /test {
            rewrite_by_lua_block {
                ngx.log(ngx.ERR, 'uri:', ngx.var.uri)
            }
            try_files $uri $uri/ @handler;
        }

        location @handler{
            log_by_lua_block {
                ngx.log(ngx.ERR, 'uri:', ngx.var.uri)
            }
        }

        location /sum {
            internal;
            content_by_lua_block {
                local args = ngx.req.get_uri_args()
                ngx.say(tonumber(args.a) + tonumber(args.b))
            }
        }

        location /app/test {
            content_by_lua_block {
                local res = ngx.location.capture(
                        "/sum", {args={a=3, b=9}}
                        )
                ngx.say("status:", res.status, " response:", res.body)
            }
        }

        location /app/mongo {
#            default_type text/html;
            content_by_lua_file lua/app/mongo.lua;
        }

        location ~ ^/api/([-_a-zA-Z0-9/]+) {
            # 准入阶段完成参数验证
            access_by_lua_file  lua/app/access_check.lua;

            #内容生成阶段
            content_by_lua_file lua/app/actions/$1.lua;
        }

        location / {
            default_type text/html;

            rewrite_by_lua '
                ngx.ctx.foo = 76
            ';
            access_by_lua '
                ngx.ctx.foo = ngx.ctx.foo + 3
            ';

            content_by_lua_block {
                ngx.say(ngx.ctx.foo)
                ngx.say("HelloWorld")
            }
        }
    }
}
